plugins {
    id 'com.gradle.build-scan' version '3.0'
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'signing'
    id 'ru.vyarus.java-lib' version '2.2.0'
    id 'ru.vyarus.github-info' version '1.3.0'
    id 'ru.vyarus.animalsniffer' version '1.5.3'
    id 'ru.vyarus.quality' version '3.3.0'
    id 'net.researchgate.release' version '2.8.1'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'ru.vyarus.mkdocs' version '2.0.0'
}

sourceCompatibility = 1.6

wrapper {
    gradleVersion = '5.6.4'
}

ext {
    groovy = '2.5.9'
}

repositories { mavenLocal(); mavenCentral() }
dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.2'
    signature 'org.codehaus.mojo.signature:java16:1.1@signature'

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    // groovy bundled with spock (2.5.4) does not work well with java 11
    testImplementation "org.codehaus.groovy:groovy-all:$groovy"
}

group = 'ru.vyarus'
description = 'Java generics runtime resolver'

github {
    user = 'xvik'
    license = 'MIT'
}

mkdocs.publish {
    docPath = '3.0.3'
    rootRedirect = true
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

javaLib {
    // java 9 auto module name
    autoModuleName = "$project.group.$project.name"
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

afterReleaseBuild {
    dependsOn = ['publishToSonatype',
                 'closeAndReleaseSonatypeStagingRepository']
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishOnFailure()
}